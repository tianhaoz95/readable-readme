{"version":3,"file":"events.js","sourceRoot":"","sources":["../../../src/lib/serialization/events.ts"],"names":[],"mappings":";;;AAAA,4CAAwC;AAYxC;;;;;;GAMG;AACH,MAAa,cAAe,SAAQ,cAAK;IAkBrC,YACI,IAAY,EACZ,OAA0B,EAC1B,MAAsC;QAEtC,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;CACJ;AA3BD,wCA2BC","sourcesContent":["import { Event } from \"../utils/events\";\nimport { ProjectReflection } from \"../models\";\nimport { ProjectReflection as JSONProjectReflection } from \"./schema\";\n\n/**\n * Optional data associated with the [[SerializeEvent]].\n */\nexport interface SerializeEventData {\n    outputDirectory?: string;\n    outputFile?: string;\n}\n\n/**\n * An event emitted by the [[Serializer]] class at the very beginning and\n * ending of the a project serialization process.\n *\n * @see [[Serializer.EVENT_BEGIN]]\n * @see [[Serializer.EVENT_END]]\n */\nexport class SerializeEvent extends Event {\n    /**\n     * The project the renderer is currently processing.\n     */\n    readonly project: ProjectReflection;\n\n    /**\n     * The path of the directory the serialized JSON should be written to.\n     */\n    outputDirectory?: string;\n\n    /**\n     * The name of the main JSON file (base + ext)\n     */\n    outputFile?: string;\n\n    output: Partial<JSONProjectReflection>;\n\n    constructor(\n        name: string,\n        project: ProjectReflection,\n        output: Partial<JSONProjectReflection>\n    ) {\n        super(name);\n        this.project = project;\n        this.output = output;\n    }\n}\n"]}