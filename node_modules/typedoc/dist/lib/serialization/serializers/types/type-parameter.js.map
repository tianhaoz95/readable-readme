{"version":3,"file":"type-parameter.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/type-parameter.ts"],"names":[],"mappings":";;;AAAA,4CAAoD;AAEpD,iDAA2D;AAG3D,MAAa,2BAA4B,SAAQ,oCAA0C;IACvF,QAAQ,CAAC,CAAU;QACf,OAAO,CAAC,YAAY,0BAAiB,CAAC;IAC1C,CAAC;IAED,QAAQ,CACJ,IAAuB,EACvB,GAAwC;QAExC,MAAM,MAAM,GAA0B;YAClC,GAAG,GAAG;YACN,IAAI,EAAE,IAAI,CAAC,IAAI;SAClB,CAAC;QAEF,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC5D;QACD,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACtD;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AAvBD,kEAuBC","sourcesContent":["import { TypeParameterType } from \"../../../models\";\n\nimport { TypeSerializerComponent } from \"../../components\";\nimport { TypeParameterType as JSONTypeParameterType } from \"../../schema\";\n\nexport class TypeParameterTypeSerializer extends TypeSerializerComponent<TypeParameterType> {\n    supports(t: unknown) {\n        return t instanceof TypeParameterType;\n    }\n\n    toObject(\n        type: TypeParameterType,\n        obj: Pick<JSONTypeParameterType, \"type\">\n    ): JSONTypeParameterType {\n        const result: JSONTypeParameterType = {\n            ...obj,\n            name: type.name,\n        };\n\n        if (type.constraint) {\n            result.constraint = this.owner.toObject(type.constraint);\n        }\n        if (type.default) {\n            result.default = this.owner.toObject(type.default);\n        }\n\n        return result;\n    }\n}\n"]}