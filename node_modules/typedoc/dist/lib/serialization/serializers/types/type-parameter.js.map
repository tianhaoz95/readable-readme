{"version":3,"file":"type-parameter.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/type-parameter.ts"],"names":[],"mappings":";;AAAA,4CAAoD;AAEpD,iDAA2D;AAG3D,MAAa,2BAA4B,SAAQ,oCAA0C;IACvF,QAAQ,CAAC,CAAU;QACf,OAAO,CAAC,YAAY,0BAAiB,CAAC;IAC1C,CAAC;IAED,QAAQ,CAAC,IAAuB,EAAE,GAAwC;QACtE,MAAM,MAAM,mCACL,GAAG,KACN,IAAI,EAAE,IAAI,CAAC,IAAI,GAClB,CAAC;QAEF,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC5D;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AAjBD,kEAiBC","sourcesContent":["import { TypeParameterType } from '../../../models';\n\nimport { TypeSerializerComponent } from '../../components';\nimport { TypeParameterType as JSONTypeParameterType } from '../../schema';\n\nexport class TypeParameterTypeSerializer extends TypeSerializerComponent<TypeParameterType> {\n    supports(t: unknown) {\n        return t instanceof TypeParameterType;\n    }\n\n    toObject(type: TypeParameterType, obj: Pick<JSONTypeParameterType, 'type'>): JSONTypeParameterType {\n        const result: JSONTypeParameterType = {\n            ...obj,\n            name: type.name\n        };\n\n        if (type.constraint) {\n            result.constraint = this.owner.toObject(type.constraint);\n        }\n\n        return result;\n    }\n}\n"]}