{"version":3,"file":"tuple.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/tuple.ts"],"names":[],"mappings":";;AAAA,4CAA4C;AAE5C,iDAA2D;AAG3D,MAAa,mBAAoB,SAAQ,oCAAkC;IACvE,QAAQ,CAAC,CAAU;QACf,OAAO,CAAC,YAAY,kBAAS,CAAC;IAClC,CAAC;IAED,QAAQ,CAAC,KAAgB,EAAE,GAAgC;QACvD,MAAM,MAAM,qBAAuB,GAAG,CAAE,CAAC;QAEzC,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7C,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SACrE;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AAdD,kDAcC","sourcesContent":["import { TupleType } from '../../../models';\n\nimport { TypeSerializerComponent } from '../../components';\nimport { TupleType as JSONTupleType } from '../../schema';\n\nexport class TupleTypeSerializer extends TypeSerializerComponent<TupleType> {\n    supports(t: unknown) {\n        return t instanceof TupleType;\n    }\n\n    toObject(tuple: TupleType, obj: Pick<JSONTupleType, 'type'>): JSONTupleType {\n        const result: JSONTupleType = { ...obj };\n\n        if (tuple.elements && tuple.elements.length > 0) {\n            result.elements = tuple.elements.map(t => this.owner.toObject(t));\n        }\n\n        return result;\n    }\n}\n"]}