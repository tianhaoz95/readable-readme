{"version":3,"file":"union.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/union.ts"],"names":[],"mappings":";;AAAA,4CAA4C;AAE5C,iDAA2D;AAG3D,MAAa,mBAAoB,SAAQ,oCAAkC;IACvE,QAAQ,CAAC,CAAU;QACf,OAAO,CAAC,YAAY,kBAAS,CAAC;IAClC,CAAC;IAOD,QAAQ,CAAC,IAAe,EAAE,GAAgC;QACtD,uCACO,GAAG,KACN,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IACpD;IACN,CAAC;CACJ;AAhBD,kDAgBC","sourcesContent":["import { UnionType } from '../../../models';\n\nimport { TypeSerializerComponent } from '../../components';\nimport { UnionType as JSONUnionType } from '../../schema';\n\nexport class UnionTypeSerializer extends TypeSerializerComponent<UnionType> {\n    supports(t: unknown) {\n        return t instanceof UnionType;\n    }\n\n    /**\n     * Will be run after [[TypeSerializer]] so `type` will already be set.\n     * @param type\n     * @param obj\n     */\n    toObject(type: UnionType, obj: Pick<JSONUnionType, 'type'>): JSONUnionType {\n        return {\n            ...obj,\n            types: type.types.map(t => this.owner.toObject(t))\n        };\n    }\n}\n"]}