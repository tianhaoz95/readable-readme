{"version":3,"file":"inferred.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/inferred.ts"],"names":[],"mappings":";;;AAAA,4CAA+C;AAC/C,iDAA2D;AAO3D,MAAa,sBAAuB,SAAQ,oCAAqC;IAC7E,QAAQ,CAAC,IAAa;QAClB,OAAO,IAAI,YAAY,qBAAY,CAAC;IACxC,CAAC;IAED,QAAQ,CACJ,QAAsB,EACtB,GAA8C;QAE9C,OAAO;YACH,GAAG,GAAG;YACN,IAAI,EAAE,QAAQ,CAAC,IAAI;SACtB,CAAC;IACN,CAAC;CACJ;AAdD,wDAcC","sourcesContent":["import { InferredType } from \"../../../models\";\nimport { TypeSerializerComponent } from \"../../components\";\n\nimport {\n    Type as JSONType,\n    InferredType as JSONInferredType,\n} from \"../../schema\";\n\nexport class InferredTypeSerializer extends TypeSerializerComponent<InferredType> {\n    supports(item: unknown): boolean {\n        return item instanceof InferredType;\n    }\n\n    toObject(\n        inferred: InferredType,\n        obj: JSONType & Pick<JSONInferredType, \"type\">\n    ): JSONInferredType {\n        return {\n            ...obj,\n            name: inferred.name,\n        };\n    }\n}\n"]}