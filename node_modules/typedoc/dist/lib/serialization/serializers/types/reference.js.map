{"version":3,"file":"reference.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/reference.ts"],"names":[],"mappings":";;AAAA,4CAAgD;AAEhD,iDAA2D;AAG3D,MAAa,uBAAwB,SAAQ,oCAAsC;IAC/E,QAAQ,CAAC,CAAU;QACf,OAAO,CAAC,YAAY,sBAAa,CAAC;IACtC,CAAC;IAED,QAAQ,CACJ,IAAmB,EACnB,GAAiE;QAEjE,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;SAC/B;QAED,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YACrD,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3E;QAED,uCACO,GAAG,KACN,IAAI,EAAE,IAAI,CAAC,IAAI,IACjB;IACN,CAAC;CACJ;AAtBD,0DAsBC","sourcesContent":["import { ReferenceType } from '../../../models';\n\nimport { TypeSerializerComponent } from '../../components';\nimport { ReferenceType as JSONReferenceType } from '../../schema';\n\nexport class ReferenceTypeSerializer extends TypeSerializerComponent<ReferenceType> {\n    supports(t: unknown) {\n        return t instanceof ReferenceType;\n    }\n\n    toObject(\n        type: ReferenceType,\n        obj: Pick<JSONReferenceType, 'type'> & Partial<JSONReferenceType>\n    ): JSONReferenceType {\n        if (type.reflection) {\n            obj.id = type.reflection.id;\n        }\n\n        if (type.typeArguments && type.typeArguments.length > 0) {\n            obj.typeArguments = type.typeArguments.map(t => this.owner.toObject(t));\n        }\n\n        return {\n            ...obj,\n            name: type.name\n        };\n    }\n}\n"]}