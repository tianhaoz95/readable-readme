{"version":3,"file":"rest.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/rest.ts"],"names":[],"mappings":";;;AAAA,4CAA2C;AAE3C,iDAA2D;AAG3D,MAAa,kBAAmB,SAAQ,oCAAiC;IACrE,QAAQ,CAAC,CAAU;QACf,OAAO,CAAC,YAAY,iBAAQ,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACH,QAAQ,CAAC,IAAc,EAAE,GAA+B;QACpD,OAAO;YACH,GAAG,GAAG;YACN,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;SACrD,CAAC;IACN,CAAC;CACJ;AAhBD,gDAgBC","sourcesContent":["import { RestType } from \"../../../models\";\n\nimport { TypeSerializerComponent } from \"../../components\";\nimport { RestType as JSONRestType } from \"../../schema\";\n\nexport class RestTypeSerializer extends TypeSerializerComponent<RestType> {\n    supports(t: unknown) {\n        return t instanceof RestType;\n    }\n\n    /**\n     * Will be run after [[TypeSerializer]] so `type` will already be set.\n     * @param type\n     * @param obj\n     */\n    toObject(type: RestType, obj: Pick<JSONRestType, \"type\">): JSONRestType {\n        return {\n            ...obj,\n            elementType: this.owner.toObject(type.elementType),\n        };\n    }\n}\n"]}