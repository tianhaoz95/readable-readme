{"version":3,"file":"unknown.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/unknown.ts"],"names":[],"mappings":";;;AAAA,4CAA8C;AAE9C,iDAA2D;AAG3D,MAAa,qBAAsB,SAAQ,oCAAoC;IAC3E,QAAQ,CAAC,CAAU;QACf,OAAO,CAAC,YAAY,oBAAW,CAAC;IACpC,CAAC;IAED;;;;OAIG;IACH,QAAQ,CACJ,IAAiB,EACjB,GAAkC;QAElC,OAAO;YACH,GAAG,GAAG;YACN,IAAI,EAAE,IAAI,CAAC,IAAI;SAClB,CAAC;IACN,CAAC;CACJ;AAnBD,sDAmBC","sourcesContent":["import { UnknownType } from \"../../../models\";\n\nimport { TypeSerializerComponent } from \"../../components\";\nimport { UnknownType as JSONUnknownType } from \"../../schema\";\n\nexport class UnknownTypeSerializer extends TypeSerializerComponent<UnknownType> {\n    supports(t: unknown) {\n        return t instanceof UnknownType;\n    }\n\n    /**\n     * Will be run after [[TypeSerializer]] so `type` will already be set.\n     * @param type\n     * @param obj\n     */\n    toObject(\n        type: UnknownType,\n        obj: Pick<JSONUnknownType, \"type\">\n    ): JSONUnknownType {\n        return {\n            ...obj,\n            name: type.name,\n        };\n    }\n}\n"]}