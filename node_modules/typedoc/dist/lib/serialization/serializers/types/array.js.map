{"version":3,"file":"array.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/array.ts"],"names":[],"mappings":";;AAAA,4CAA4C;AAE5C,iDAA2D;AAG3D,MAAa,mBAAoB,SAAQ,oCAAkC;IACvE,QAAQ,CAAC,CAAU;QACf,OAAO,CAAC,YAAY,kBAAS,CAAC;IAClC,CAAC;IAOD,QAAQ,CAAC,IAAe,EAAE,GAAgC;QACtD,uCACO,GAAG,KACN,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IACpD;IACN,CAAC;CACJ;AAhBD,kDAgBC","sourcesContent":["import { ArrayType } from '../../../models';\n\nimport { TypeSerializerComponent } from '../../components';\nimport { ArrayType as JSONArrayType } from '../../schema';\n\nexport class ArrayTypeSerializer extends TypeSerializerComponent<ArrayType> {\n    supports(t: unknown) {\n        return t instanceof ArrayType;\n    }\n\n    /**\n     * Will be run after [[TypeSerializer]] so `type` will already be set.\n     * @param type\n     * @param obj\n     */\n    toObject(type: ArrayType, obj: Pick<JSONArrayType, 'type'>): JSONArrayType {\n        return {\n            ...obj,\n            elementType: this.owner.toObject(type.elementType)\n        };\n    }\n}\n"]}