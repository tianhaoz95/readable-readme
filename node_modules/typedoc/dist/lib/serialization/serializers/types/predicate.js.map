{"version":3,"file":"predicate.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/predicate.ts"],"names":[],"mappings":";;;AAAA,4CAAgD;AAChD,iDAA2D;AAG3D,MAAa,uBAAwB,SAAQ,oCAAsC;IAC/E,QAAQ,CAAC,CAAU;QACf,OAAO,CAAC,YAAY,sBAAa,CAAC;IACtC,CAAC;IAED,QAAQ,CACJ,IAAmB,EACnB,GAAoC;QAEpC,OAAO;YACH,GAAG,GAAG;YACN,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,UAAU,EAAE,IAAI,CAAC,UAAU;gBACvB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;gBACtC,CAAC,CAAC,SAAS;SAClB,CAAC;IACN,CAAC;CACJ;AAlBD,0DAkBC","sourcesContent":["import { PredicateType } from \"../../../models\";\nimport { TypeSerializerComponent } from \"../../components\";\nimport { PredicateType as JSONPredicateType } from \"../../schema\";\n\nexport class PredicateTypeSerializer extends TypeSerializerComponent<PredicateType> {\n    supports(t: unknown) {\n        return t instanceof PredicateType;\n    }\n\n    toObject(\n        type: PredicateType,\n        obj: Pick<JSONPredicateType, \"type\">\n    ): JSONPredicateType {\n        return {\n            ...obj,\n            name: type.name,\n            asserts: type.asserts,\n            targetType: type.targetType\n                ? this.owner.toObject(type.targetType)\n                : undefined,\n        };\n    }\n}\n"]}