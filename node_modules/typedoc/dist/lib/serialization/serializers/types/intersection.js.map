{"version":3,"file":"intersection.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/intersection.ts"],"names":[],"mappings":";;AAAA,4CAAmD;AAEnD,iDAA2D;AAG3D,MAAa,0BAA2B,SAAQ,oCAAyC;IACrF,QAAQ,CAAC,CAAU;QACf,OAAO,CAAC,YAAY,yBAAgB,CAAC;IACzC,CAAC;IAOD,QAAQ,CAAC,IAAsB,EAAE,GAAuC;QACpE,uCACO,GAAG,KACN,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IACpD;IACN,CAAC;CACJ;AAhBD,gEAgBC","sourcesContent":["import { IntersectionType } from '../../../models';\n\nimport { TypeSerializerComponent } from '../../components';\nimport { IntersectionType as JSONIntersectionType } from '../../schema';\n\nexport class IntersectionTypeSerializer extends TypeSerializerComponent<IntersectionType> {\n    supports(t: unknown) {\n        return t instanceof IntersectionType;\n    }\n\n    /**\n     * Will be run after [[TypeSerializer]] so `type` will already be set.\n     * @param type\n     * @param obj\n     */\n    toObject(type: IntersectionType, obj: Pick<JSONIntersectionType, 'type'>): JSONIntersectionType {\n        return {\n            ...obj,\n            types: type.types.map(t => this.owner.toObject(t))\n        };\n    }\n}\n"]}