{"version":3,"file":"abstract.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/reflections/abstract.ts"],"names":[],"mappings":";;AAAA,4CAA+D;AAE/D,iDAAiE;AACjE,sCAA6C;AAC7C,mEAAuE;AAGvE,MAAa,oBAAqB,SAAQ,0CAAyC;IAG/E,QAAQ,CAAC,CAAU;QACf,OAAO,CAAC,YAAY,mBAAU,CAAC;IACnC,CAAC;IAED,QAAQ,CAAC,UAAsB,EAAE,GAA6B;QAC1D,MAAM,MAAM,mCACL,GAAG,KACN,EAAE,EAAE,UAAU,CAAC,EAAE,EACjB,IAAI,EAAE,UAAU,CAAC,IAAI,EACrB,IAAI,EAAE,UAAU,CAAC,IAAI,EACrB,UAAU,EAAE,UAAU,CAAC,UAAU,EACjC,KAAK,EAAE,EAAE,GACZ,CAAC;QAEF,IAAI,UAAU,CAAC,YAAY,KAAK,UAAU,CAAC,IAAI,EAAE;YAC7C,MAAM,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;SACjD;QAED,IAAI,UAAU,CAAC,OAAO,EAAE;YACpB,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SAC5D;QAED,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,mBAAmB,CAAC,0BAAe,CAAC,SAAS,CAAC,EAAE;YACrE,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;gBAChC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;aAC5B;SACJ;QAED,IAAI,UAAU,CAAC,SAAS,IAAI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YACzD,MAAM,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5E;QAED,IAAI,UAAU,CAAC,UAAU,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3D,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,yBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACpG;QAED,UAAU,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE;YACpC,IAAI,QAAQ,KAAK,yBAAgB,CAAC,WAAW,EAAE;gBAC3C,OAAO;aACV;YACD,IAAI,IAAI,GAAG,yBAAgB,CAAC,QAAQ,CAAC,CAAC;YACtC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBACf,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;aACrB;YACD,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC;IAClB,CAAC;;AApDL,oDAqDC;AApDU,6BAAQ,GAAG,IAAI,CAAC","sourcesContent":["import { Reflection, TraverseProperty } from '../../../models';\n\nimport { ReflectionSerializerComponent } from '../../components';\nimport { DecoratorWrapper } from '../models';\nimport { ReflectionFlags } from '../../../models/reflections/abstract';\nimport { Reflection as JSONReflection } from '../../schema';\n\nexport class ReflectionSerializer extends ReflectionSerializerComponent<Reflection> {\n    static PRIORITY = 1000;\n\n    supports(t: unknown) {\n        return t instanceof Reflection;\n    }\n\n    toObject(reflection: Reflection, obj?: Partial<JSONReflection>): JSONReflection {\n        const result: JSONReflection = {\n            ...obj,\n            id: reflection.id,\n            name: reflection.name,\n            kind: reflection.kind,\n            kindString: reflection.kindString,\n            flags: {}\n        };\n\n        if (reflection.originalName !== reflection.name) {\n            result.originalName = reflection.originalName;\n        }\n\n        if (reflection.comment) {\n            result.comment = this.owner.toObject(reflection.comment);\n        }\n\n        for (const key of Object.getOwnPropertyNames(ReflectionFlags.prototype)) {\n            if (reflection.flags[key] === true) {\n                result.flags[key] = true;\n            }\n        }\n\n        if (reflection.decorates && reflection.decorates.length > 0) {\n            result.decorates = reflection.decorates.map(t => this.owner.toObject(t));\n        }\n\n        if (reflection.decorators && reflection.decorators.length > 0) {\n            result.decorators = reflection.decorators.map(d => this.owner.toObject(new DecoratorWrapper(d)));\n        }\n\n        reflection.traverse((child, property) => {\n            if (property === TraverseProperty.TypeLiteral) {\n                return;\n            }\n            let name = TraverseProperty[property];\n            name = name[0].toLowerCase() + name.substr(1);\n            if (!result[name]) {\n                result[name] = [];\n            }\n            result[name].push(this.owner.toObject(child));\n        });\n\n        return result;\n    }\n}\n"]}