{"version":3,"file":"components.js","sourceRoot":"","sources":["../../../src/lib/output/components.ts"],"names":[],"mappings":";;;AAAA,6BAA6B;AAE7B,kDAAkE;AAQzD,0FARA,qBAAS,OAQA;AAPlB,uDAGqC;AAErC,qCAAoD;AAIpD,MAAsB,iBAAkB,SAAQ,6BAA2B;CAAG;AAA9E,8CAA8E;AAE9E;;GAEG;AACH,MAAsB,6BAA8B,SAAQ,iBAAiB;IAA7E;;QAiBI;;WAEG;QACO,cAAS,GAAG,oBAAoB,CAAC;IAwD/C,CAAC;IAtDG;;;;OAIG;IACO,UAAU;QAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;YACtB,CAAC,sBAAa,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,eAAe;YAC3C,CAAC,kBAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW;SACtC,CAAC,CAAC;IACP,CAAC;IAED;;;;;OAKG;IACI,cAAc,CAAC,QAAgB;QAClC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC/B,OAAO,QAAQ,CAAC;SACnB;aAAM;YACH,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAC3B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CACzB,CAAC;YACF,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CACvD,KAAK,EACL,GAAG,CACN,CAAC;SACL;IACL,CAAC;IAED;;;;OAIG;IACO,eAAe,CAAC,KAAoB;QAC1C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACO,WAAW,CAAC,IAAe;QACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC;QACzB,IAAI,CAAC,UAAU;YACX,IAAI,CAAC,KAAK,YAAY,6BAAqB;gBACvC,CAAC,CAAC,IAAI,CAAC,KAAK;gBACZ,CAAC,CAAC,SAAS,CAAC;IACxB,CAAC;CACJ;AA5ED,sEA4EC","sourcesContent":["import * as Path from \"path\";\n\nimport { Component, AbstractComponent } from \"../utils/component\";\nimport {\n    ProjectReflection,\n    DeclarationReflection,\n} from \"../models/reflections/index\";\nimport { Renderer } from \"./renderer\";\nimport { RendererEvent, PageEvent } from \"./events\";\n\nexport { Component };\n\nexport abstract class RendererComponent extends AbstractComponent<Renderer> {}\n\n/**\n * A plugin for the renderer that reads the current render context.\n */\nexport abstract class ContextAwareRendererComponent extends RendererComponent {\n    /**\n     * The project that is currently processed.\n     */\n    protected project?: ProjectReflection;\n\n    /**\n     * The reflection that is currently processed.\n     */\n    protected reflection?: DeclarationReflection;\n\n    /**\n     * The url of the document that is being currently generated.\n     * Set when a page begins rendering.\n     */\n    private location!: string;\n\n    /**\n     * Regular expression to test if a string looks like an external url.\n     */\n    protected urlPrefix = /^(http|ftp)s?:\\/\\//;\n\n    /**\n     * Create a new ContextAwareRendererPlugin instance.\n     *\n     * @param renderer  The renderer this plugin should be attached to.\n     */\n    protected initialize() {\n        this.listenTo(this.owner, {\n            [RendererEvent.BEGIN]: this.onBeginRenderer,\n            [PageEvent.BEGIN]: this.onBeginPage,\n        });\n    }\n\n    /**\n     * Transform the given absolute path into a relative path.\n     *\n     * @param absolute  The absolute path to transform.\n     * @returns A path relative to the document currently processed.\n     */\n    public getRelativeUrl(absolute: string): string {\n        if (this.urlPrefix.test(absolute)) {\n            return absolute;\n        } else {\n            const relative = Path.relative(\n                Path.dirname(this.location),\n                Path.dirname(absolute)\n            );\n            return Path.join(relative, Path.basename(absolute)).replace(\n                /\\\\/g,\n                \"/\"\n            );\n        }\n    }\n\n    /**\n     * Triggered before the renderer starts rendering a project.\n     *\n     * @param event  An event object describing the current render operation.\n     */\n    protected onBeginRenderer(event: RendererEvent) {\n        this.project = event.project;\n    }\n\n    /**\n     * Triggered before a document will be rendered.\n     *\n     * @param page  An event object describing the current render operation.\n     */\n    protected onBeginPage(page: PageEvent) {\n        this.location = page.url;\n        this.reflection =\n            page.model instanceof DeclarationReflection\n                ? page.model\n                : undefined;\n    }\n}\n"]}