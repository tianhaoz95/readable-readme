{"version":3,"file":"LegendPlugin.js","sourceRoot":"","sources":["../../../../src/lib/output/plugins/LegendPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import { Reflection, DeclarationReflection, ProjectReflection } from '../../models/reflections/index';\nimport { Component, RendererComponent } from '../components';\nimport { PageEvent, RendererEvent } from '../events';\n\nexport interface LegendItem {\n    /**\n     * Legend item name\n     */\n    name: string;\n\n    /**\n     * List of css classes that represent the legend item\n     */\n    classes: string[];\n}\n\nconst ignoredClasses = new Set([\n    'tsd-parent-kind-module',\n    'tsd-is-not-exported',\n    'tsd-is-overwrite'\n]);\n\nconst completeLegend: LegendItem[][] = [\n    [\n        { name: 'Namespace', classes: ['tsd-kind-namespace'] },\n        { name: 'Object literal', classes: ['tsd-kind-object-literal'] },\n        { name: 'Variable', classes: ['tsd-kind-variable'] },\n        { name: 'Function', classes: ['tsd-kind-function'] },\n        { name: 'Function with type parameter', classes: ['tsd-kind-function', 'tsd-has-type-parameter'] },\n        { name: 'Index signature', classes: ['tsd-kind-index-signature'] },\n        { name: 'Type alias', classes: ['tsd-kind-type-alias'] },\n        { name: 'Type alias with type parameter', classes: ['tsd-kind-type-alias', 'tsd-has-type-parameter'] }\n    ],\n    [\n        { name: 'Enumeration', classes: ['tsd-kind-enum'] },\n        { name: 'Enumeration member', classes: ['tsd-kind-enum-member'] },\n        { name: 'Property', classes: ['tsd-kind-property', 'tsd-parent-kind-enum'] },\n        { name: 'Method', classes: ['tsd-kind-method', 'tsd-parent-kind-enum'] }\n    ],\n    [\n        { name: 'Interface', classes: ['tsd-kind-interface'] },\n        { name: 'Interface with type parameter', classes: ['tsd-kind-interface', 'tsd-has-type-parameter'] },\n        { name: 'Constructor', classes: ['tsd-kind-constructor', 'tsd-parent-kind-interface'] },\n        { name: 'Property', classes: ['tsd-kind-property', 'tsd-parent-kind-interface'] },\n        { name: 'Method', classes: ['tsd-kind-method', 'tsd-parent-kind-interface'] },\n        { name: 'Index signature', classes: ['tsd-kind-index-signature', 'tsd-parent-kind-interface'] }\n    ],\n    [\n        { name: 'Class', classes: ['tsd-kind-class'] },\n        { name: 'Class with type parameter', classes: ['tsd-kind-class', 'tsd-has-type-parameter'] },\n        { name: 'Constructor', classes: ['tsd-kind-constructor', 'tsd-parent-kind-class'] },\n        { name: 'Property', classes: ['tsd-kind-property', 'tsd-parent-kind-class'] },\n        { name: 'Method', classes: ['tsd-kind-method', 'tsd-parent-kind-class'] },\n        { name: 'Accessor', classes: ['tsd-kind-accessor', 'tsd-parent-kind-class'] },\n        { name: 'Index signature', classes: ['tsd-kind-index-signature', 'tsd-parent-kind-class'] }\n    ],\n    [\n        { name: 'Inherited constructor', classes: ['tsd-kind-constructor', 'tsd-parent-kind-class', 'tsd-is-inherited'] },\n        { name: 'Inherited property', classes: ['tsd-kind-property', 'tsd-parent-kind-class', 'tsd-is-inherited'] },\n        { name: 'Inherited method', classes: ['tsd-kind-method', 'tsd-parent-kind-class', 'tsd-is-inherited'] },\n        { name: 'Inherited accessor', classes: ['tsd-kind-accessor', 'tsd-parent-kind-class', 'tsd-is-inherited'] }\n    ],\n    [\n        { name: 'Protected property', classes: ['tsd-kind-property', 'tsd-parent-kind-class', 'tsd-is-protected'] },\n        { name: 'Protected method', classes: ['tsd-kind-method', 'tsd-parent-kind-class', 'tsd-is-protected'] },\n        { name: 'Protected accessor', classes: ['tsd-kind-accessor', 'tsd-parent-kind-class', 'tsd-is-protected'] }\n    ],\n    [\n        { name: 'Private property', classes: ['tsd-kind-property', 'tsd-parent-kind-class', 'tsd-is-private'] },\n        { name: 'Private method', classes: ['tsd-kind-method', 'tsd-parent-kind-class', 'tsd-is-private'] },\n        { name: 'Private accessor', classes: ['tsd-kind-accessor', 'tsd-parent-kind-class', 'tsd-is-private'] }\n    ],\n    [\n        { name: 'Static property', classes: ['tsd-kind-property', 'tsd-parent-kind-class', 'tsd-is-static'] },\n        { name: 'Static method', classes: ['tsd-kind-method', 'tsd-parent-kind-class', 'tsd-is-static'] }\n    ]\n];\n\nexport class LegendBuilder {\n    private _classesList: Set<string>[];\n\n    constructor() {\n        this._classesList = [];\n    }\n\n    build(): LegendItem[][] {\n        const filteredLegend = completeLegend.map(list => {\n            return list.filter(item => {\n                for (const classes of this._classesList) {\n                    if (this.isArrayEqualToSet(item.classes, classes)) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }).filter(list => list.length);\n\n        return filteredLegend;\n    }\n\n    registerCssClasses(classArray: string[]) {\n        let exists = false;\n        const items = classArray.filter(cls => !ignoredClasses.has(cls));\n\n        for (const classes of this._classesList) {\n            if (this.isArrayEqualToSet(items, classes)) {\n                exists = true;\n                break;\n            }\n        }\n\n        if (!exists) {\n            this._classesList.push(new Set(items));\n        }\n    }\n\n    private isArrayEqualToSet<T>(a: T[], b: Set<T>) {\n        if (a.length !== b.size) {\n            return false;\n        }\n\n        for (const value of a) {\n            if (!b.has(value)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\n/**\n * A plugin that generates the legend for the current page.\n *\n * This plugin sets the [[PageEvent.legend]] property.\n */\n@Component({name: 'legend'})\nexport class LegendPlugin extends RendererComponent {\n    private _project!: ProjectReflection;\n\n    /**\n     * Create a new LegendPlugin instance.\n     */\n    initialize() {\n        this.listenTo(this.owner, {\n            [RendererEvent.BEGIN]: this.onRenderBegin,\n            [PageEvent.BEGIN]: this.onRendererBeginPage\n        });\n    }\n\n    private onRenderBegin(event: RendererEvent) {\n        this._project = event.project;\n    }\n\n    /**\n     * Triggered before a document will be rendered.\n     *\n     * @param page  An event object describing the current render operation.\n     */\n    private onRendererBeginPage(page: PageEvent) {\n        const model = page.model;\n        const builder = new LegendBuilder();\n\n        // immediate children\n        this.buildLegend(model, builder);\n\n        // top level items (as appears in navigation)\n        this._project.children?.forEach(reflection => {\n            if (reflection !== model) {\n                this.buildLegend(reflection, builder);\n            }\n        });\n\n        page.legend = builder.build().sort((a, b) => b.length - a.length);\n    }\n\n    private buildLegend(model: Reflection, builder: LegendBuilder) {\n        if (model instanceof DeclarationReflection) {\n            const children = (model.children || [] as Array<Reflection | undefined>)\n                .concat(...model.groups?.map(group => group.children) || [])\n                .concat(...model.getAllSignatures())\n                .concat(model.indexSignature as Reflection)\n                .filter(item => item);\n\n            for (const child of children) {\n                const cssClasses = child?.cssClasses?.split(' ');\n                if (cssClasses) {\n                    builder.registerCssClasses(cssClasses);\n                }\n            }\n        }\n    }\n}\n"]}