{"version":3,"file":"renderer.js","sourceRoot":"","sources":["../../../src/lib/output/renderer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Holds all logic used render and output the final documentation.\n *\n * The [[Renderer]] class is the central controller within this namespace. When invoked it creates\n * an instance of [[BaseTheme]] which defines the layout of the documentation and fires a\n * series of [[RendererEvent]] events. Instances of [[BasePlugin]] can listen to these events and\n * alter the generated output.\n */\n\nimport * as Path from \"path\";\nimport * as FS from \"fs-extra\";\nimport { Theme as ShikiTheme } from \"shiki-themes\";\n// eslint-disable-next-line\nconst ProgressBar = require(\"progress\");\n\nimport { Application } from \"../application\";\nimport { Theme } from \"./theme\";\nimport { RendererEvent, PageEvent } from \"./events\";\nimport { ProjectReflection } from \"../models/reflections/project\";\nimport { UrlMapping } from \"./models/UrlMapping\";\nimport { writeFile } from \"../utils/fs\";\nimport { DefaultTheme } from \"./themes/DefaultTheme\";\nimport { RendererComponent } from \"./components\";\nimport { Component, ChildableComponent } from \"../utils/component\";\nimport { BindOption } from \"../utils\";\nimport { loadHighlighter } from \"../utils/highlighter\";\n\n/**\n * The renderer processes a [[ProjectReflection]] using a [[BaseTheme]] instance and writes\n * the emitted html documents to a output directory. You can specify which theme should be used\n * using the ```--theme <name>``` command line argument.\n *\n * Subclasses of [[BasePlugin]] that have registered themselves in the [[Renderer.PLUGIN_CLASSES]]\n * will be automatically initialized. Most of the core functionality is provided as separate plugins.\n *\n * [[Renderer]] is a subclass of [[EventDispatcher]] and triggers a series of events while\n * a project is being processed. You can listen to these events to control the flow or manipulate\n * the output.\n *\n *  * [[Renderer.EVENT_BEGIN]]<br>\n *    Triggered before the renderer starts rendering a project. The listener receives\n *    an instance of [[RendererEvent]]. By calling [[RendererEvent.preventDefault]] the entire\n *    render process can be canceled.\n *\n *    * [[Renderer.EVENT_BEGIN_PAGE]]<br>\n *      Triggered before a document will be rendered. The listener receives an instance of\n *      [[PageEvent]]. By calling [[PageEvent.preventDefault]] the generation of the\n *      document can be canceled.\n *\n *    * [[Renderer.EVENT_END_PAGE]]<br>\n *      Triggered after a document has been rendered, just before it is written to disc. The\n *      listener receives an instance of [[PageEvent]]. When calling\n *      [[PageEvent.preventDefault]] the the document will not be saved to disc.\n *\n *  * [[Renderer.EVENT_END]]<br>\n *    Triggered after the renderer has written all documents. The listener receives\n *    an instance of [[RendererEvent]].\n */\n@Component({ name: \"renderer\", internal: true, childClass: RendererComponent })\nexport class Renderer extends ChildableComponent<\n    Application,\n    RendererComponent\n> {\n    /**\n     * The theme that is used to render the documentation.\n     */\n    theme?: Theme;\n\n    @BindOption(\"theme\")\n    themeName!: string;\n\n    @BindOption(\"disableOutputCheck\")\n    disableOutputCheck!: boolean;\n\n    @BindOption(\"gaID\")\n    gaID!: string;\n\n    @BindOption(\"gaSite\")\n    gaSite!: string;\n\n    @BindOption(\"hideGenerator\")\n    hideGenerator!: boolean;\n\n    @BindOption(\"toc\")\n    toc!: string[];\n\n    @BindOption(\"highlightTheme\")\n    highlightTheme!: ShikiTheme;\n\n    /**\n     * Render the given project reflection to the specified output directory.\n     *\n     * @param project  The project that should be rendered.\n     * @param outputDirectory  The path of the directory the documentation should be rendered to.\n     */\n    async render(\n        project: ProjectReflection,\n        outputDirectory: string\n    ): Promise<void> {\n        await loadHighlighter(this.highlightTheme);\n        if (\n            !this.prepareTheme() ||\n            !this.prepareOutputDirectory(outputDirectory)\n        ) {\n            return;\n        }\n\n        const output = new RendererEvent(\n            RendererEvent.BEGIN,\n            outputDirectory,\n            project\n        );\n        output.settings = this.application.options.getRawValues();\n        output.urls = this.theme!.getUrls(project);\n\n        const bar = new ProgressBar(\"Rendering [:bar] :percent\", {\n            total: output.urls.length,\n            width: 40,\n        });\n\n        this.trigger(output);\n        if (!output.isDefaultPrevented) {\n            output.urls.forEach((mapping: UrlMapping) => {\n                this.renderDocument(output.createPageEvent(mapping));\n                bar.tick();\n            });\n\n            this.trigger(RendererEvent.END, output);\n        }\n    }\n\n    /**\n     * Render a single page.\n     *\n     * @param page An event describing the current page.\n     * @return TRUE if the page has been saved to disc, otherwise FALSE.\n     */\n    private renderDocument(page: PageEvent): boolean {\n        this.trigger(PageEvent.BEGIN, page);\n        if (page.isDefaultPrevented) {\n            return false;\n        }\n\n        // Theme must be set as this is only called in render, and render ensures theme is set.\n        page.template =\n            page.template ||\n            this.theme!.resources.templates.getResource(\n                page.templateName\n            )!.getTemplate();\n        page.contents = page.template(page, {\n            allowProtoMethodsByDefault: true,\n            allowProtoPropertiesByDefault: true,\n        });\n\n        this.trigger(PageEvent.END, page);\n        if (page.isDefaultPrevented) {\n            return false;\n        }\n\n        try {\n            writeFile(page.filename, page.contents, false);\n        } catch (error) {\n            this.application.logger.error(\"Could not write %s\", page.filename);\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Ensure that a theme has been setup.\n     *\n     * If a the user has set a theme we try to find and load it. If no theme has\n     * been specified we load the default theme.\n     *\n     * @returns TRUE if a theme has been setup, otherwise FALSE.\n     */\n    private prepareTheme(): boolean {\n        if (!this.theme) {\n            const themeName = this.themeName;\n            let path = Path.resolve(themeName);\n            if (!FS.existsSync(path)) {\n                path = Path.join(Renderer.getThemeDirectory(), themeName);\n                if (!FS.existsSync(path)) {\n                    this.application.logger.error(\n                        \"The theme %s could not be found.\",\n                        themeName\n                    );\n                    return false;\n                }\n            }\n\n            const filename = Path.join(path, \"theme.js\");\n            if (!FS.existsSync(filename)) {\n                this.theme = this.addComponent(\n                    \"theme\",\n                    new DefaultTheme(this, path)\n                );\n            } else {\n                try {\n                    /* eslint-disable */\n                    const themeClass =\n                        typeof require(filename) === \"function\"\n                            ? require(filename)\n                            : require(filename).default;\n                    /* eslint-enable */\n\n                    this.theme = this.addComponent(\n                        \"theme\",\n                        new themeClass(this, path)\n                    );\n                } catch (err) {\n                    throw new Error(\n                        `Exception while loading \"${filename}\". You must export a \\`new Theme(renderer, basePath)\\` compatible class.\\n` +\n                            err\n                    );\n                }\n            }\n        }\n\n        this.theme!.resources.activate();\n        return true;\n    }\n\n    /**\n     * Prepare the output directory. If the directory does not exist, it will be\n     * created. If the directory exists, it will be emptied.\n     *\n     * @param directory  The path to the directory that should be prepared.\n     * @returns TRUE if the directory could be prepared, otherwise FALSE.\n     */\n    private prepareOutputDirectory(directory: string): boolean {\n        if (FS.existsSync(directory)) {\n            if (!FS.statSync(directory).isDirectory()) {\n                this.application.logger.error(\n                    'The output target \"%s\" exists but it is not a directory.',\n                    directory\n                );\n                return false;\n            }\n\n            if (this.disableOutputCheck) {\n                return true;\n            }\n\n            if (FS.readdirSync(directory).length === 0) {\n                return true;\n            }\n\n            // Theme must be set as this is only called after the theme is created.\n            if (!this.theme!.isOutputDirectory(directory)) {\n                this.application.logger.error(\n                    'The output directory \"%s\" exists but does not seem to be a documentation generated by TypeDoc.\\n' +\n                        \"Make sure this is the right target directory, delete the folder and rerun TypeDoc.\",\n                    directory\n                );\n                return false;\n            }\n\n            try {\n                FS.removeSync(directory);\n            } catch (error) {\n                this.application.logger.warn(\n                    \"Could not empty the output directory.\"\n                );\n            }\n        }\n\n        if (!FS.existsSync(directory)) {\n            try {\n                FS.mkdirpSync(directory);\n            } catch (error) {\n                this.application.logger.error(\n                    \"Could not create output directory %s\",\n                    directory\n                );\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    // This exists so that the resources can get the directory\n    // without importing this file. Normally, I'd just directly\n    // get the path, but typedoc-plugin-markdown overrides the\n    // static version, and I don't need to break that yet...\n    getDefaultTheme() {\n        return Renderer.getDefaultTheme();\n    }\n\n    /**\n     * Return the path containing the themes shipped with TypeDoc.\n     *\n     * @returns The path to the theme directory.\n     */\n    static getThemeDirectory(): string {\n        return Path.dirname(require.resolve(\"typedoc-default-themes\"));\n    }\n\n    /**\n     * Return the path to the default theme.\n     *\n     * @returns The path to the default theme.\n     */\n    static getDefaultTheme(): string {\n        return Path.join(Renderer.getThemeDirectory(), \"default\");\n    }\n}\n\nimport \"./plugins\";\n"]}