{"version":3,"file":"DefaultTheme.js","sourceRoot":"","sources":["../../../../src/lib/output/themes/DefaultTheme.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Path from \"path\";\nimport * as FS from \"fs\";\n\nimport { Theme } from \"../theme\";\nimport { Renderer } from \"../renderer\";\nimport {\n    Reflection,\n    ReflectionKind,\n    ProjectReflection,\n    ContainerReflection,\n    DeclarationReflection,\n} from \"../../models/reflections/index\";\nimport { ReflectionGroup } from \"../../models/ReflectionGroup\";\nimport { UrlMapping } from \"../models/UrlMapping\";\nimport { NavigationItem } from \"../models/NavigationItem\";\nimport { RendererEvent } from \"../events\";\n\n/**\n * Defines a mapping of a [[Models.Kind]] to a template file.\n *\n * Used by [[DefaultTheme]] to map reflections to output files.\n */\nexport interface TemplateMapping {\n    /**\n     * [[DeclarationReflection.kind]] this rule applies to.\n     */\n    kind: ReflectionKind[];\n\n    /**\n     * Can this mapping have children or should all further reflections be rendered\n     * to the defined output page?\n     */\n    isLeaf: boolean;\n\n    /**\n     * The name of the directory the output files should be written to.\n     */\n    directory: string;\n\n    /**\n     * The name of the template that should be used to render the reflection.\n     */\n    template: string;\n}\n\n/**\n * Default theme implementation of TypeDoc. If a theme does not provide a custom\n * [[BaseTheme]] implementation, this theme class will be used.\n */\nexport class DefaultTheme extends Theme {\n    /**\n     * Mappings of reflections kinds to templates used by this theme.\n     */\n    static MAPPINGS: TemplateMapping[] = [\n        {\n            kind: [ReflectionKind.Class],\n            isLeaf: false,\n            directory: \"classes\",\n            template: \"reflection.hbs\",\n        },\n        {\n            kind: [ReflectionKind.Interface],\n            isLeaf: false,\n            directory: \"interfaces\",\n            template: \"reflection.hbs\",\n        },\n        {\n            kind: [ReflectionKind.Enum],\n            isLeaf: false,\n            directory: \"enums\",\n            template: \"reflection.hbs\",\n        },\n        {\n            kind: [ReflectionKind.Namespace, ReflectionKind.Module],\n            isLeaf: false,\n            directory: \"modules\",\n            template: \"reflection.hbs\",\n        },\n    ];\n\n    static URL_PREFIX = /^(http|ftp)s?:\\/\\//;\n\n    /**\n     * Create a new DefaultTheme instance.\n     *\n     * @param renderer  The renderer this theme is attached to.\n     * @param basePath  The base path of this theme.\n     */\n    constructor(renderer: Renderer, basePath: string) {\n        super(renderer, basePath);\n        this.listenTo(\n            renderer,\n            RendererEvent.BEGIN,\n            this.onRendererBegin,\n            1024\n        );\n    }\n\n    /**\n     * Test whether the given path contains a documentation generated by this theme.\n     *\n     * @param path  The path of the directory that should be tested.\n     * @returns     TRUE if the given path seems to be a previous output directory,\n     *              otherwise FALSE.\n     */\n    isOutputDirectory(path: string): boolean {\n        if (!FS.existsSync(Path.join(path, \"index.html\"))) {\n            return false;\n        }\n        if (!FS.existsSync(Path.join(path, \"assets\"))) {\n            return false;\n        }\n        if (!FS.existsSync(Path.join(path, \"assets\", \"js\", \"main.js\"))) {\n            return false;\n        }\n        if (!FS.existsSync(Path.join(path, \"assets\", \"images\", \"icons.png\"))) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Map the models of the given project to the desired output files.\n     *\n     * @param project  The project whose urls should be generated.\n     * @returns        A list of [[UrlMapping]] instances defining which models\n     *                 should be rendered to which files.\n     */\n    getUrls(project: ProjectReflection): UrlMapping[] {\n        const urls: UrlMapping[] = [];\n\n        if (this.application.options.getValue(\"readme\") === \"none\") {\n            project.url = \"index.html\";\n            urls.push(new UrlMapping(\"index.html\", project, \"reflection.hbs\"));\n        } else {\n            project.url = \"modules.html\";\n            urls.push(\n                new UrlMapping(\"modules.html\", project, \"reflection.hbs\")\n            );\n            urls.push(new UrlMapping(\"index.html\", project, \"index.hbs\"));\n        }\n\n        project.children?.forEach((child: Reflection) => {\n            if (child instanceof DeclarationReflection) {\n                DefaultTheme.buildUrls(child, urls);\n            }\n        });\n\n        return urls;\n    }\n\n    /**\n     * Create a navigation structure for the given project.\n     *\n     * @param project  The project whose navigation should be generated.\n     * @returns        The root navigation item.\n     */\n    getNavigation(project: ProjectReflection): NavigationItem {\n        const builder = new NavigationBuilder(\n            project,\n            project,\n            this.application.options.getValue(\"entryPoints\").length > 1\n        );\n        return builder.build(\n            this.application.options.getValue(\"readme\") !== \"none\"\n        );\n    }\n\n    /**\n     * Triggered before the renderer starts rendering a project.\n     *\n     * @param event  An event object describing the current render operation.\n     */\n    private onRendererBegin(event: RendererEvent) {\n        if (event.project.groups) {\n            event.project.groups.forEach(DefaultTheme.applyGroupClasses);\n        }\n\n        for (const id in event.project.reflections) {\n            const reflection = event.project.reflections[id];\n            if (reflection instanceof DeclarationReflection) {\n                DefaultTheme.applyReflectionClasses(reflection);\n            }\n\n            if (\n                reflection instanceof ContainerReflection &&\n                reflection.groups\n            ) {\n                reflection.groups.forEach(DefaultTheme.applyGroupClasses);\n            }\n        }\n    }\n\n    /**\n     * Return a url for the given reflection.\n     *\n     * @param reflection  The reflection the url should be generated for.\n     * @param relative    The parent reflection the url generation should stop on.\n     * @param separator   The separator used to generate the url.\n     * @returns           The generated url.\n     */\n    static getUrl(\n        reflection: Reflection,\n        relative?: Reflection,\n        separator = \".\"\n    ): string {\n        let url = reflection.getAlias();\n\n        if (\n            reflection.parent &&\n            reflection.parent !== relative &&\n            !(reflection.parent instanceof ProjectReflection)\n        ) {\n            url =\n                DefaultTheme.getUrl(reflection.parent, relative, separator) +\n                separator +\n                url;\n        }\n\n        return url;\n    }\n\n    /**\n     * Return the template mapping for the given reflection.\n     *\n     * @param reflection  The reflection whose mapping should be resolved.\n     * @returns           The found mapping or undefined if no mapping could be found.\n     */\n    static getMapping(\n        reflection: DeclarationReflection\n    ): TemplateMapping | undefined {\n        return DefaultTheme.MAPPINGS.find((mapping) =>\n            reflection.kindOf(mapping.kind)\n        );\n    }\n\n    /**\n     * Build the url for the the given reflection and all of its children.\n     *\n     * @param reflection  The reflection the url should be created for.\n     * @param urls        The array the url should be appended to.\n     * @returns           The altered urls array.\n     */\n    static buildUrls(\n        reflection: DeclarationReflection,\n        urls: UrlMapping[]\n    ): UrlMapping[] {\n        const mapping = DefaultTheme.getMapping(reflection);\n        if (mapping) {\n            if (\n                !reflection.url ||\n                !DefaultTheme.URL_PREFIX.test(reflection.url)\n            ) {\n                const url = [\n                    mapping.directory,\n                    DefaultTheme.getUrl(reflection) + \".html\",\n                ].join(\"/\");\n                urls.push(new UrlMapping(url, reflection, mapping.template));\n\n                reflection.url = url;\n                reflection.hasOwnDocument = true;\n            }\n\n            for (const child of reflection.children || []) {\n                if (mapping.isLeaf) {\n                    DefaultTheme.applyAnchorUrl(child, reflection);\n                } else {\n                    DefaultTheme.buildUrls(child, urls);\n                }\n            }\n        } else if (reflection.parent) {\n            DefaultTheme.applyAnchorUrl(reflection, reflection.parent);\n        }\n\n        return urls;\n    }\n\n    /**\n     * Generate an anchor url for the given reflection and all of its children.\n     *\n     * @param reflection  The reflection an anchor url should be created for.\n     * @param container   The nearest reflection having an own document.\n     */\n    static applyAnchorUrl(reflection: Reflection, container: Reflection) {\n        if (!reflection.url || !DefaultTheme.URL_PREFIX.test(reflection.url)) {\n            const anchor = DefaultTheme.getUrl(reflection, container, \".\");\n\n            reflection.url = container.url + \"#\" + anchor;\n            reflection.anchor = anchor;\n            reflection.hasOwnDocument = false;\n        }\n\n        reflection.traverse((child) => {\n            if (child instanceof DeclarationReflection) {\n                DefaultTheme.applyAnchorUrl(child, container);\n            }\n        });\n    }\n\n    /**\n     * Generate the css classes for the given reflection and apply them to the\n     * [[DeclarationReflection.cssClasses]] property.\n     *\n     * @param reflection  The reflection whose cssClasses property should be generated.\n     */\n    static applyReflectionClasses(reflection: DeclarationReflection) {\n        const classes: string[] = [];\n        let kind: string;\n\n        if (reflection.kind === ReflectionKind.Accessor) {\n            if (!reflection.getSignature) {\n                classes.push(\"tsd-kind-set-signature\");\n            } else if (!reflection.setSignature) {\n                classes.push(\"tsd-kind-get-signature\");\n            } else {\n                classes.push(\"tsd-kind-accessor\");\n            }\n        } else {\n            kind = ReflectionKind[reflection.kind];\n            classes.push(DefaultTheme.toStyleClass(\"tsd-kind-\" + kind));\n        }\n\n        if (\n            reflection.parent &&\n            reflection.parent instanceof DeclarationReflection\n        ) {\n            kind = ReflectionKind[reflection.parent.kind];\n            classes.push(DefaultTheme.toStyleClass(`tsd-parent-kind-${kind}`));\n        }\n\n        let hasTypeParameters = !!reflection.typeParameters;\n        reflection.getAllSignatures().forEach((signature) => {\n            hasTypeParameters = hasTypeParameters || !!signature.typeParameters;\n        });\n\n        if (hasTypeParameters) {\n            classes.push(\"tsd-has-type-parameter\");\n        }\n        if (reflection.overwrites) {\n            classes.push(\"tsd-is-overwrite\");\n        }\n        if (reflection.inheritedFrom) {\n            classes.push(\"tsd-is-inherited\");\n        }\n        if (reflection.flags.isPrivate) {\n            classes.push(\"tsd-is-private\");\n        }\n        if (reflection.flags.isProtected) {\n            classes.push(\"tsd-is-protected\");\n        }\n        if (reflection.flags.isStatic) {\n            classes.push(\"tsd-is-static\");\n        }\n        if (reflection.flags.isExternal) {\n            classes.push(\"tsd-is-external\");\n        }\n\n        reflection.cssClasses = classes.join(\" \");\n    }\n\n    /**\n     * Generate the css classes for the given reflection group and apply them to the\n     * [[ReflectionGroup.cssClasses]] property.\n     *\n     * @param group  The reflection group whose cssClasses property should be generated.\n     */\n    static applyGroupClasses(group: ReflectionGroup) {\n        const classes: string[] = [];\n        if (group.allChildrenAreInherited) {\n            classes.push(\"tsd-is-inherited\");\n        }\n        if (group.allChildrenArePrivate) {\n            classes.push(\"tsd-is-private\");\n        }\n        if (group.allChildrenAreProtectedOrPrivate) {\n            classes.push(\"tsd-is-private-protected\");\n        }\n        if (group.allChildrenAreExternal) {\n            classes.push(\"tsd-is-external\");\n        }\n\n        group.cssClasses = classes.join(\" \");\n    }\n\n    /**\n     * Transform a space separated string into a string suitable to be used as a\n     * css class, e.g. \"constructor method\" > \"Constructor-method\".\n     */\n    static toStyleClass(str: string) {\n        return str\n            .replace(/(\\w)([A-Z])/g, (_m, m1, m2) => m1 + \"-\" + m2)\n            .toLowerCase();\n    }\n}\n\nexport class NavigationBuilder {\n    constructor(\n        private project: ProjectReflection,\n        private entryPoint: ContainerReflection,\n        private multipleEntryPoints: boolean\n    ) {}\n\n    /**\n     * Build the navigation structure.\n     *\n     * @param hasReadmeFile True if the project has a readme\n     * @returns The root node of the generated navigation structure.\n     */\n    build(hasReadmeFile: boolean): NavigationItem {\n        const root = new NavigationItem(\"Index\", \"index.html\");\n        const sidebarRoot = new NavigationItem(\n            this.multipleEntryPoints ? \"Modules\" : \"Exports\",\n            hasReadmeFile ? \"modules.html\" : \"index.html\",\n            root\n        );\n        sidebarRoot.isModules = true;\n\n        const modules: DeclarationReflection[] = [];\n        this.project\n            .getReflectionsByKind(ReflectionKind.SomeModule)\n            .forEach((someModule) => {\n                let target = someModule.parent;\n                let inScope = someModule === this.entryPoint;\n                while (target) {\n                    if (target.kindOf(ReflectionKind.Module)) {\n                        return;\n                    }\n                    if (this.entryPoint === target) {\n                        inScope = true;\n                    }\n                    target = target.parent;\n                }\n\n                if (\n                    inScope &&\n                    someModule instanceof DeclarationReflection &&\n                    someModule.children &&\n                    someModule.children.length > 0\n                ) {\n                    modules.push(someModule);\n                }\n            });\n\n        if (modules.length < 10) {\n            this.buildGroups(modules, root);\n        } else {\n            this.buildGroups(\n                this.entryPoint.getChildrenByKind(ReflectionKind.SomeModule),\n                root,\n                true\n            );\n        }\n\n        return root;\n    }\n\n    /**\n     * Create navigation nodes for the given list of reflections. The resulting nodes will be grouped into\n     * an \"internal\" and an \"external\" section when applicable.\n     *\n     * @param reflections  The list of reflections which should be transformed into navigation nodes.\n     * @param parent       The parent NavigationItem of the newly created nodes.\n     * @param buildChildren Whether navigation nodes should also be built for the children of each reflection.\n     */\n    protected buildGroups(\n        reflections: DeclarationReflection[],\n        parent: NavigationItem,\n        buildChildren = false\n    ) {\n        let state = -1;\n        const hasExternals = this.containsExternals(reflections);\n        this.sortReflections(reflections);\n\n        reflections.forEach((reflection) => {\n            if (hasExternals && !reflection.flags.isExternal && state !== 1) {\n                new NavigationItem(\n                    \"Internals\",\n                    undefined,\n                    parent,\n                    \"tsd-is-external\"\n                );\n                state = 1;\n            } else if (\n                hasExternals &&\n                reflection.flags.isExternal &&\n                state !== 2\n            ) {\n                new NavigationItem(\n                    \"Externals\",\n                    undefined,\n                    parent,\n                    \"tsd-is-external\"\n                );\n                state = 2;\n            }\n\n            const item = NavigationItem.create(reflection, parent);\n            this.includeDedicatedUrls(reflection, item);\n            if (buildChildren) {\n                this.buildChildren(reflection, item);\n            }\n        });\n    }\n\n    /**\n     * Create navigation nodes for all container children of the given reflection.\n     *\n     * @param reflection  The reflection whose children modules should be transformed into navigation nodes.\n     * @param parent      The parent NavigationItem of the newly created nodes.\n     */\n    protected buildChildren(\n        reflection: DeclarationReflection,\n        parent: NavigationItem\n    ) {\n        const modules = reflection.getChildrenByKind(ReflectionKind.SomeModule);\n        modules.sort((a: DeclarationReflection, b: DeclarationReflection) => {\n            return a.getFullName() < b.getFullName() ? -1 : 1;\n        });\n\n        modules.forEach((reflection) => {\n            const item = NavigationItem.create(reflection, parent);\n            this.includeDedicatedUrls(reflection, item);\n            this.buildChildren(reflection, item);\n        });\n    }\n\n    /**\n     * Test whether the given list of modules contains an external module.\n     *\n     * @param modules  The list of modules to test.\n     * @returns        TRUE if any of the modules is marked as being external.\n     */\n    protected containsExternals(modules: DeclarationReflection[]): boolean {\n        for (let index = 0, length = modules.length; index < length; index++) {\n            if (modules[index].flags.isExternal) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Sort the given list of modules by name, groups external modules at the bottom.\n     *\n     * @param modules  The list of modules that should be sorted.\n     */\n    protected sortReflections(modules: DeclarationReflection[]) {\n        modules.sort((a: DeclarationReflection, b: DeclarationReflection) => {\n            if (a.flags.isExternal && !b.flags.isExternal) {\n                return 1;\n            }\n            if (!a.flags.isExternal && b.flags.isExternal) {\n                return -1;\n            }\n            return a.getFullName() < b.getFullName() ? -1 : 1;\n        });\n    }\n\n    /**\n     * Find the urls of all children of the given reflection and store them as dedicated urls\n     * of the given NavigationItem.\n     *\n     * @param reflection  The reflection whose children urls should be included.\n     * @param item        The navigation node whose dedicated urls should be set.\n     */\n    protected includeDedicatedUrls(\n        reflection: DeclarationReflection,\n        item: NavigationItem\n    ) {\n        (function walk(reflection: DeclarationReflection) {\n            for (const child of reflection.children || []) {\n                if (\n                    child.hasOwnDocument &&\n                    !child.kindOf(ReflectionKind.SomeModule)\n                ) {\n                    if (!item.dedicatedUrls) {\n                        item.dedicatedUrls = [];\n                    }\n                    item.dedicatedUrls.push(child.url!);\n                    walk(child);\n                }\n            }\n        })(reflection);\n    }\n}\n"]}