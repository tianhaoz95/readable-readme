{"version":3,"file":"DefaultTheme.js","sourceRoot":"","sources":["../../../../src/lib/output/themes/DefaultTheme.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Path from 'path';\nimport * as FS from 'fs';\n\nimport { Theme } from '../theme';\nimport { Renderer } from '../renderer';\nimport { Reflection, ReflectionKind, ProjectReflection, ContainerReflection, DeclarationReflection } from '../../models/reflections/index';\nimport { ReflectionGroup } from '../../models/ReflectionGroup';\nimport { UrlMapping } from '../models/UrlMapping';\nimport { NavigationItem } from '../models/NavigationItem';\nimport { RendererEvent } from '../events';\n\n/**\n * Defines a mapping of a [[Models.Kind]] to a template file.\n *\n * Used by [[DefaultTheme]] to map reflections to output files.\n */\nexport interface TemplateMapping {\n    /**\n     * [[DeclarationReflection.kind]] this rule applies to.\n     */\n    kind: ReflectionKind[];\n\n    /**\n     * Can this mapping have children or should all further reflections be rendered\n     * to the defined output page?\n     */\n    isLeaf: boolean;\n\n    /**\n     * The name of the directory the output files should be written to.\n     */\n    directory: string;\n\n    /**\n     * The name of the template that should be used to render the reflection.\n     */\n    template: string;\n}\n\n/**\n * Default theme implementation of TypeDoc. If a theme does not provide a custom\n * [[BaseTheme]] implementation, this theme class will be used.\n */\nexport class DefaultTheme extends Theme {\n    /**\n     * Mappings of reflections kinds to templates used by this theme.\n     */\n    static MAPPINGS: TemplateMapping[] = [{\n        kind:      [ReflectionKind.Class],\n        isLeaf:    false,\n        directory: 'classes',\n        template:  'reflection.hbs'\n    }, {\n        kind:      [ReflectionKind.Interface],\n        isLeaf:    false,\n        directory: 'interfaces',\n        template:  'reflection.hbs'\n    }, {\n        kind:      [ReflectionKind.Enum],\n        isLeaf:    false,\n        directory: 'enums',\n        template:  'reflection.hbs'\n    }, {\n        kind:      [ReflectionKind.Module, ReflectionKind.ExternalModule],\n        isLeaf:    false,\n        directory: 'modules',\n        template:  'reflection.hbs'\n    }];\n\n    static URL_PREFIX: RegExp = /^(http|ftp)s?:\\/\\//;\n\n    /**\n     * Create a new DefaultTheme instance.\n     *\n     * @param renderer  The renderer this theme is attached to.\n     * @param basePath  The base path of this theme.\n     */\n    constructor(renderer: Renderer, basePath: string) {\n        super(renderer, basePath);\n        this.listenTo(renderer, RendererEvent.BEGIN, this.onRendererBegin, 1024);\n    }\n\n    /**\n     * Test whether the given path contains a documentation generated by this theme.\n     *\n     * @param path  The path of the directory that should be tested.\n     * @returns     TRUE if the given path seems to be a previous output directory,\n     *              otherwise FALSE.\n     */\n    isOutputDirectory(path: string): boolean {\n        if (!FS.existsSync(Path.join(path, 'index.html'))) {\n            return false;\n        }\n        if (!FS.existsSync(Path.join(path, 'assets'))) {\n            return false;\n        }\n        if (!FS.existsSync(Path.join(path, 'assets', 'js', 'main.js'))) {\n            return false;\n        }\n        if (!FS.existsSync(Path.join(path, 'assets', 'images', 'icons.png'))) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Map the models of the given project to the desired output files.\n     *\n     * @param project  The project whose urls should be generated.\n     * @returns        A list of [[UrlMapping]] instances defining which models\n     *                 should be rendered to which files.\n     */\n    getUrls(project: ProjectReflection): UrlMapping[] {\n        const urls: UrlMapping[] = [];\n        const entryPoint = this.getEntryPoint(project);\n\n        if (this.application.options.getValue('readme') === 'none') {\n            entryPoint.url = 'index.html';\n            urls.push(new UrlMapping('index.html', entryPoint, 'reflection.hbs'));\n        } else {\n            entryPoint.url = 'globals.html';\n            urls.push(new UrlMapping('globals.html', entryPoint, 'reflection.hbs'));\n            urls.push(new UrlMapping('index.html',   project, 'index.hbs'));\n        }\n\n        if (entryPoint.children) {\n            entryPoint.children.forEach((child: Reflection) => {\n                if (child instanceof DeclarationReflection) {\n                    DefaultTheme.buildUrls(child, urls);\n                }\n            });\n        }\n\n        return urls;\n    }\n\n    /**\n     * Return the entry point of the documentation.\n     *\n     * @param project  The current project.\n     * @returns The reflection that should be used as the entry point.\n     */\n    getEntryPoint(project: ProjectReflection): ContainerReflection {\n        const entryPoint = this.owner.entryPoint;\n        if (entryPoint) {\n            const reflection = project.getChildByName(entryPoint);\n            if (reflection) {\n                if (reflection instanceof ContainerReflection) {\n                    return reflection;\n                } else {\n                    this.application.logger.warn('The given entry point `%s` is not a container.', entryPoint);\n                }\n            } else {\n                this.application.logger.warn('The entry point `%s` could not be found.', entryPoint);\n            }\n        }\n\n        return project;\n    }\n\n    /**\n     * Create a navigation structure for the given project.\n     *\n     * @param project  The project whose navigation should be generated.\n     * @returns        The root navigation item.\n     */\n    getNavigation(project: ProjectReflection): NavigationItem {\n        const entryPoint = this.getEntryPoint(project);\n        const builder = new NavigationBuilder(project, entryPoint);\n        return builder.build(this.application.options.getValue('readme') !== 'none');\n    }\n\n    /**\n     * Triggered before the renderer starts rendering a project.\n     *\n     * @param event  An event object describing the current render operation.\n     */\n    private onRendererBegin(event: RendererEvent) {\n        if (event.project.groups) {\n            event.project.groups.forEach(DefaultTheme.applyGroupClasses);\n        }\n\n        for (let id in event.project.reflections) {\n            const reflection = event.project.reflections[id];\n            if (reflection instanceof DeclarationReflection) {\n                DefaultTheme.applyReflectionClasses(reflection);\n            }\n\n            if (reflection instanceof ContainerReflection && reflection.groups) {\n                reflection.groups.forEach(DefaultTheme.applyGroupClasses);\n            }\n        }\n    }\n\n    /**\n     * Return a url for the given reflection.\n     *\n     * @param reflection  The reflection the url should be generated for.\n     * @param relative    The parent reflection the url generation should stop on.\n     * @param separator   The separator used to generate the url.\n     * @returns           The generated url.\n     */\n    static getUrl(reflection: Reflection, relative?: Reflection, separator: string = '.'): string {\n        let url = reflection.getAlias();\n\n        if (reflection.parent && reflection.parent !== relative &&\n            !(reflection.parent instanceof ProjectReflection)) {\n            url = DefaultTheme.getUrl(reflection.parent, relative, separator) + separator + url;\n        }\n\n        return url;\n    }\n\n    /**\n     * Return the template mapping fore the given reflection.\n     *\n     * @param reflection  The reflection whose mapping should be resolved.\n     * @returns           The found mapping or undefined if no mapping could be found.\n     */\n    static getMapping(reflection: DeclarationReflection): TemplateMapping | undefined {\n        return DefaultTheme.MAPPINGS.find(mapping => reflection.kindOf(mapping.kind));\n    }\n\n    /**\n     * Build the url for the the given reflection and all of its children.\n     *\n     * @param reflection  The reflection the url should be created for.\n     * @param urls        The array the url should be appended to.\n     * @returns           The altered urls array.\n     */\n    static buildUrls(reflection: DeclarationReflection, urls: UrlMapping[]): UrlMapping[] {\n        const mapping = DefaultTheme.getMapping(reflection);\n        if (mapping) {\n            if (!reflection.url || !DefaultTheme.URL_PREFIX.test(reflection.url)) {\n                const url = [mapping.directory, DefaultTheme.getUrl(reflection) + '.html'].join('/');\n                urls.push(new UrlMapping(url, reflection, mapping.template));\n\n                reflection.url = url;\n                reflection.hasOwnDocument = true;\n            }\n\n            for (const child of reflection.children || []) {\n                if (mapping.isLeaf) {\n                    DefaultTheme.applyAnchorUrl(child, reflection);\n                } else {\n                    DefaultTheme.buildUrls(child, urls);\n                }\n            }\n        } else if (reflection.parent) {\n            DefaultTheme.applyAnchorUrl(reflection, reflection.parent);\n        }\n\n        return urls;\n    }\n\n    /**\n     * Generate an anchor url for the given reflection and all of its children.\n     *\n     * @param reflection  The reflection an anchor url should be created for.\n     * @param container   The nearest reflection having an own document.\n     */\n    static applyAnchorUrl(reflection: Reflection, container: Reflection) {\n        if (!reflection.url || !DefaultTheme.URL_PREFIX.test(reflection.url)) {\n            let anchor = DefaultTheme.getUrl(reflection, container, '.');\n            if (reflection['isStatic']) {\n                anchor = 'static-' + anchor;\n            }\n\n            reflection.url = container.url + '#' + anchor;\n            reflection.anchor = anchor;\n            reflection.hasOwnDocument = false;\n        }\n\n        reflection.traverse((child) => {\n            if (child instanceof DeclarationReflection) {\n                DefaultTheme.applyAnchorUrl(child, container);\n            }\n        });\n    }\n\n    /**\n     * Generate the css classes for the given reflection and apply them to the\n     * [[DeclarationReflection.cssClasses]] property.\n     *\n     * @param reflection  The reflection whose cssClasses property should be generated.\n     */\n    static applyReflectionClasses(reflection: DeclarationReflection) {\n        const classes: string[] = [];\n        let kind: string;\n\n        if (reflection.kind === ReflectionKind.Accessor) {\n            if (!reflection.getSignature) {\n                classes.push('tsd-kind-set-signature');\n            } else if (!reflection.setSignature) {\n                classes.push('tsd-kind-get-signature');\n            } else {\n                classes.push('tsd-kind-accessor');\n            }\n        } else {\n            kind = ReflectionKind[reflection.kind];\n            classes.push(DefaultTheme.toStyleClass('tsd-kind-' + kind));\n        }\n\n        if (reflection.parent && reflection.parent instanceof DeclarationReflection) {\n            kind = ReflectionKind[reflection.parent.kind];\n            classes.push(DefaultTheme.toStyleClass(`tsd-parent-kind-${kind}`));\n        }\n\n        let hasTypeParameters = !!reflection.typeParameters;\n        reflection.getAllSignatures().forEach((signature) => {\n            hasTypeParameters = hasTypeParameters || !!signature.typeParameters;\n        });\n\n        if (hasTypeParameters)            { classes.push('tsd-has-type-parameter'); }\n        if (reflection.overwrites)        { classes.push('tsd-is-overwrite'); }\n        if (reflection.inheritedFrom)     { classes.push('tsd-is-inherited'); }\n        if (reflection.flags.isPrivate)   { classes.push('tsd-is-private'); }\n        if (reflection.flags.isProtected) { classes.push('tsd-is-protected'); }\n        if (reflection.flags.isStatic)    { classes.push('tsd-is-static'); }\n        if (reflection.flags.isExternal)  { classes.push('tsd-is-external'); }\n        if (!reflection.flags.isExported) { classes.push('tsd-is-not-exported'); }\n\n        reflection.cssClasses = classes.join(' ');\n    }\n\n    /**\n     * Generate the css classes for the given reflection group and apply them to the\n     * [[ReflectionGroup.cssClasses]] property.\n     *\n     * @param group  The reflection group whose cssClasses property should be generated.\n     */\n    static applyGroupClasses(group: ReflectionGroup) {\n        const classes: string[] = [];\n        if (group.allChildrenAreInherited)  { classes.push('tsd-is-inherited'); }\n        if (group.allChildrenArePrivate)    { classes.push('tsd-is-private'); }\n        if (group.allChildrenAreProtectedOrPrivate) { classes.push('tsd-is-private-protected'); }\n        if (group.allChildrenAreExternal)   { classes.push('tsd-is-external'); }\n        if (!group.someChildrenAreExported) { classes.push('tsd-is-not-exported'); }\n\n        group.cssClasses = classes.join(' ');\n    }\n\n    /**\n     * Transform a space separated string into a string suitable to be used as a\n     * css class, e.g. \"constructor method\" > \"Constructor-method\".\n     */\n    static toStyleClass(str: string) {\n        return str.replace(/(\\w)([A-Z])/g, (m, m1, m2) => m1 + '-' + m2).toLowerCase();\n    }\n}\n\nexport class NavigationBuilder {\n    constructor(\n        private project: ProjectReflection,\n        private entryPoint: ContainerReflection\n    ) {}\n\n    /**\n     * Build the navigation structure.\n     *\n     * @param hasSeparateGlobals  Has the project a separated globals.html file?\n     * @return                    The root node of the generated navigation structure.\n     */\n    build(hasSeparateGlobals: boolean): NavigationItem {\n        const root = new NavigationItem('Index', 'index.html');\n\n        if (this.entryPoint === this.project) {\n            const globals = new NavigationItem('Globals', hasSeparateGlobals ? 'globals.html' : 'index.html', root);\n            globals.isGlobals = true;\n        }\n\n        const modules: DeclarationReflection[] = [];\n        this.project.getReflectionsByKind(ReflectionKind.SomeModule).forEach((someModule) => {\n            let target = someModule.parent;\n            let inScope = (someModule === this.entryPoint);\n            while (target) {\n                if (target.kindOf(ReflectionKind.ExternalModule)) {\n                    return;\n                }\n                if (this.entryPoint === target) {\n                    inScope = true;\n                }\n                target = target.parent;\n            }\n\n            if (inScope && someModule instanceof DeclarationReflection && someModule.children && someModule.children.length > 0) {\n                modules.push(someModule);\n            }\n        });\n\n        if (modules.length < 10) {\n            this.buildGroups(modules, root);\n        } else {\n            this.buildGroups(this.entryPoint.getChildrenByKind(ReflectionKind.SomeModule), root, true);\n        }\n\n        return root;\n    }\n\n    /**\n     * Create navigation nodes for the given list of reflections. The resulting nodes will be grouped into\n     * an \"internal\" and an \"external\" section when applicable.\n     *\n     * @param reflections  The list of reflections which should be transformed into navigation nodes.\n     * @param parent       The parent NavigationItem of the newly created nodes.\n     * @param buildChildren Whether navigation nodes should also be built for the children of each reflection.\n     */\n    protected buildGroups(\n        reflections: DeclarationReflection[],\n        parent: NavigationItem,\n        buildChildren: boolean = false\n    ) {\n        let state = -1;\n        const hasExternals = this.containsExternals(reflections);\n        this.sortReflections(reflections);\n\n        reflections.forEach((reflection) => {\n            if (hasExternals && !reflection.flags.isExternal && state !== 1) {\n                new NavigationItem('Internals', undefined, parent, 'tsd-is-external');\n                state = 1;\n            } else if (hasExternals && reflection.flags.isExternal && state !== 2) {\n                new NavigationItem('Externals', undefined, parent, 'tsd-is-external');\n                state = 2;\n            }\n\n            const item = NavigationItem.create(reflection, parent);\n            this.includeDedicatedUrls(reflection, item);\n            if (buildChildren) {\n                this.buildChildren(reflection, item);\n            }\n        });\n    }\n\n    /**\n     * Create navigation nodes for all container children of the given reflection.\n     *\n     * @param reflection  The reflection whose children modules should be transformed into navigation nodes.\n     * @param parent      The parent NavigationItem of the newly created nodes.\n     */\n    protected buildChildren(reflection: DeclarationReflection, parent: NavigationItem) {\n        const modules = reflection.getChildrenByKind(ReflectionKind.SomeModule);\n        modules.sort((a: DeclarationReflection, b: DeclarationReflection) => {\n            return a.getFullName() < b.getFullName() ? -1 : 1;\n        });\n\n        modules.forEach((reflection) => {\n            const item = NavigationItem.create(reflection, parent);\n            this.includeDedicatedUrls(reflection, item);\n            this.buildChildren(reflection, item);\n        });\n    }\n\n    /**\n     * Test whether the given list of modules contains an external module.\n     *\n     * @param modules  The list of modules to test.\n     * @returns        TRUE if any of the modules is marked as being external.\n     */\n    protected containsExternals(modules: DeclarationReflection[]): boolean {\n        for (let index = 0, length = modules.length; index < length; index++) {\n            if (modules[index].flags.isExternal) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Sort the given list of modules by name, groups external modules at the bottom.\n     *\n     * @param modules  The list of modules that should be sorted.\n     */\n    protected sortReflections(modules: DeclarationReflection[]) {\n        modules.sort((a: DeclarationReflection, b: DeclarationReflection) => {\n            if (a.flags.isExternal && !b.flags.isExternal) {\n                return  1;\n            }\n            if (!a.flags.isExternal && b.flags.isExternal) {\n                return -1;\n            }\n            return a.getFullName() < b.getFullName() ? -1 : 1;\n        });\n    }\n\n    /**\n     * Find the urls of all children of the given reflection and store them as dedicated urls\n     * of the given NavigationItem.\n     *\n     * @param reflection  The reflection whose children urls should be included.\n     * @param item        The navigation node whose dedicated urls should be set.\n     */\n    protected includeDedicatedUrls(reflection: DeclarationReflection, item: NavigationItem) {\n        (function walk(reflection: DeclarationReflection) {\n            for (const child of reflection.children || []) {\n                if (child.hasOwnDocument && !child.kindOf(ReflectionKind.SomeModule)) {\n                    if (!item.dedicatedUrls) {\n                        item.dedicatedUrls = [];\n                    }\n                    item.dedicatedUrls.push(child.url!);\n                    walk(child);\n                }\n            }\n        })(reflection);\n    }\n}\n"]}