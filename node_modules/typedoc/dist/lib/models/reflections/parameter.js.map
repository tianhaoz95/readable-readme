{"version":3,"file":"parameter.js","sourceRoot":"","sources":["../../../../src/lib/models/reflections/parameter.ts"],"names":[],"mappings":";;;AAAA,0CAAsD;AACtD,yCAMoB;AAGpB,MAAa,mBACT,SAAQ,qBAAU;IAQlB;;;;;;;OAOG;IACH,QAAQ,CAAC,QAA0B;QAC/B,IAAI,IAAI,CAAC,IAAI,YAAY,sBAAc,EAAE;YACrC,IACI,QAAQ,CACJ,IAAI,CAAC,IAAI,CAAC,WAAW,EACrB,2BAAgB,CAAC,WAAW,CAC/B,KAAK,KAAK,EACb;gBACE,OAAO;aACV;SACJ;QAED,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAED;;OAEG;IACH,QAAQ;QACJ,OAAO,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5E,CAAC;CACJ;AAtCD,kDAsCC","sourcesContent":["import { Type, ReflectionType } from \"../types/index\";\nimport {\n    Reflection,\n    DefaultValueContainer,\n    TypeContainer,\n    TraverseCallback,\n    TraverseProperty,\n} from \"./abstract\";\nimport { SignatureReflection } from \"./signature\";\n\nexport class ParameterReflection\n    extends Reflection\n    implements DefaultValueContainer, TypeContainer {\n    parent?: SignatureReflection;\n\n    defaultValue?: string;\n\n    type?: Type;\n\n    /**\n     * Traverse all potential child reflections of this reflection.\n     *\n     * The given callback will be invoked for all children, signatures and type parameters\n     * attached to this reflection.\n     *\n     * @param callback  The callback function that should be applied for each child reflection.\n     */\n    traverse(callback: TraverseCallback) {\n        if (this.type instanceof ReflectionType) {\n            if (\n                callback(\n                    this.type.declaration,\n                    TraverseProperty.TypeLiteral\n                ) === false\n            ) {\n                return;\n            }\n        }\n\n        super.traverse(callback);\n    }\n\n    /**\n     * Return a string representation of this reflection.\n     */\n    toString() {\n        return super.toString() + (this.type ? \":\" + this.type.toString() : \"\");\n    }\n}\n"]}