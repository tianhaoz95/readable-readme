{"version":3,"file":"enum.js","sourceRoot":"","sources":["../../../src/lib/utils/enum.ts"],"names":[],"mappings":";;;AAAA,SAAgB,YAAY,CAAmB,KAAQ;IACnD,MAAM,MAAM,GAAQ,EAAE,CAAC;IACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE;QAChC,IAAI,KAAK,GAAG,CAAC,EAAE;YACX,MAAM,CAAC,IAAI,CAAC,CAAM,CAAC,CAAC;SACvB;KACJ;IAED,OAAO,MAAM,CAAC;AAClB,CAAC;AATD,oCASC;AAED,oCAAoC;AACpC,SAAgB,UAAU,CAAmB,IAAO,EAAE,MAAc;IAChE,OAAO,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,IAAI,CAAM,CAAC;AACzC,CAAC;AAFD,gCAEC;AAED,SAAgB,WAAW,CAAC,KAAa,EAAE,KAAa;IACpD,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC;AACrC,CAAC;AAFD,kCAEC;AAED,SAAgB,UAAU,CAAC,KAAa,EAAE,KAAa;IACnD,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACjC,CAAC;AAFD,gCAEC","sourcesContent":["export function getEnumFlags<T extends number>(flags: T): T[] {\n    const result: T[] = [];\n    for (let i = 1; i <= flags; i *= 2) {\n        if (flags & i) {\n            result.push(i as T);\n        }\n    }\n\n    return result;\n}\n\n// T & {} reduces inference priority\nexport function removeFlag<T extends number>(flag: T, remove: T & {}): T {\n    return ((flag ^ remove) & flag) as T;\n}\n\nexport function hasAllFlags(flags: number, check: number): boolean {\n    return (flags & check) === check;\n}\n\nexport function hasAnyFlag(flags: number, check: number): boolean {\n    return (flags & check) !== 0;\n}\n"]}