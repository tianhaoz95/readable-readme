{"version":3,"file":"highlighter.js","sourceRoot":"","sources":["../../../src/lib/utils/highlighter.ts"],"names":[],"mappings":";;;AAAA,mCAAsC;AACtC,+BAA+B;AAC/B,mCAAiC;AAEjC,8DAA8D;AAC9D,4EAA4E;AAE5E,MAAM,OAAO,GAAG,IAAI,GAAG,CAAiB;IACpC,CAAC,IAAI,EAAE,YAAY,CAAC;IACpB,CAAC,IAAI,EAAE,YAAY,CAAC;IACpB,CAAC,MAAM,EAAE,aAAa,CAAC;IACvB,CAAC,IAAI,EAAE,aAAa,CAAC;IACrB,CAAC,OAAO,EAAE,aAAa,CAAC;CAC3B,CAAC,CAAC;AAEH,MAAM,kBAAkB,GAAG,cAAM,CAAC;IAC9B,MAAM;IACN,GAAG,OAAO,CAAC,IAAI,EAAE;IACjB,GAAG,KAAK,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;CACpD,CAAC,CAAC,IAAI,EAAE,CAAC;AAEV,IAAI,WAA0C,CAAC;AAExC,KAAK,UAAU,eAAe,CAAC,KAAkB;IACpD,IAAI,WAAW;QAAE,OAAO;IACxB,WAAW,GAAG,MAAM,KAAK,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AACxD,CAAC;AAHD,0CAGC;AAED,SAAgB,mBAAmB,CAAC,IAAY;IAC5C,OAAO,qBAAqB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAClD,CAAC;AAFD,kDAEC;AAED,SAAgB,qBAAqB;IACjC,OAAO,kBAAkB,CAAC;AAC9B,CAAC;AAFD,sDAEC;AAED,SAAgB,SAAS,CACrB,IAAY,EACZ,IAAY,EACZ,KAAkB;;IAElB,WAAM,CAAC,WAAW,EAAE,sDAAsD,CAAC,CAAC;IAC5E,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE;QAC5B,OAAO,IAAI,CAAC;KACf;IAED,IAAI,IAAI,KAAK,MAAM,EAAE;QACjB,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC;KAC3B;IAED,IAAI,SAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mCAAI,IAAI,CAAC;IAEjC,MAAM,MAAM,GAAa,EAAE,CAAC;IAC5B,KAAK,MAAM,IAAI,IAAI,WAAW,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;QACjE,kBAAkB,EAAE,KAAK;KAC5B,CAAC,EAAE;QACA,KAAK,MAAM,KAAK,IAAI,IAAI,EAAE;YACtB,MAAM,CAAC,IAAI,CACP,uBAAuB,MAAA,KAAK,CAAC,KAAK,mCAAI,MAAM,IAAI,EAChD,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,EACzB,SAAS,CACZ,CAAC;SACL;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACrB;IACD,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3B,CAAC;AA9BD,8BA8BC;AAED,SAAS,UAAU,CAAC,IAAY;IAC5B,OAAO,IAAI,CAAC,OAAO,CACf,UAAU,EACV,CAAC,KAAK,EAAE,EAAE,CACN,CAAC;QACG,GAAG,EAAE,OAAO;QACZ,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,QAAQ;QACb,GAAG,EAAE,QAAQ;KAChB,CAAC,KAAc,CAAC,CAAC,CACzB,CAAC;AACN,CAAC","sourcesContent":["import { ok as assert } from \"assert\";\nimport * as shiki from \"shiki\";\nimport { unique } from \"./array\";\n\n// This is needed because Shiki includes some \"fake\" languages\n// ts / js are expected by users to be equivalent to typescript / javascript\n\nconst aliases = new Map<string, string>([\n    [\"ts\", \"typescript\"],\n    [\"js\", \"javascript\"],\n    [\"bash\", \"shellscript\"],\n    [\"sh\", \"shellscript\"],\n    [\"shell\", \"shellscript\"],\n]);\n\nconst supportedLanguages = unique([\n    \"text\",\n    ...aliases.keys(),\n    ...shiki.BUNDLED_LANGUAGES.map((lang) => lang.id),\n]).sort();\n\nlet highlighter: shiki.Highlighter | undefined;\n\nexport async function loadHighlighter(theme: shiki.Theme) {\n    if (highlighter) return;\n    highlighter = await shiki.getHighlighter({ theme });\n}\n\nexport function isSupportedLanguage(lang: string) {\n    return getSupportedLanguages().includes(lang);\n}\n\nexport function getSupportedLanguages(): string[] {\n    return supportedLanguages;\n}\n\nexport function highlight(\n    code: string,\n    lang: string,\n    theme: shiki.Theme\n): string {\n    assert(highlighter, \"Tried to highlight with an uninitialized highlighter\");\n    if (!isSupportedLanguage(lang)) {\n        return code;\n    }\n\n    if (lang === \"text\") {\n        return escapeHtml(code);\n    }\n\n    lang = aliases.get(lang) ?? lang;\n\n    const result: string[] = [];\n    for (const line of highlighter.codeToThemedTokens(code, lang, theme, {\n        includeExplanation: false,\n    })) {\n        for (const token of line) {\n            result.push(\n                `<span style=\"color: ${token.color ?? \"#000\"}\">`,\n                escapeHtml(token.content),\n                \"</span>\"\n            );\n        }\n        result.push(\"\\n\");\n    }\n    return result.join(\"\");\n}\n\nfunction escapeHtml(text: string) {\n    return text.replace(\n        /[&<>\"']/g,\n        (match) =>\n            ({\n                \"&\": \"&amp;\",\n                \"<\": \"&lt;\",\n                \">\": \"&gt;\",\n                '\"': \"&quot;\",\n                \"'\": \"&#039;\",\n            }[match as never])\n    );\n}\n"]}