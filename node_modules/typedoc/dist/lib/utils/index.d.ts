declare type InternalOnly = false;
export declare type IfInternal<T, F> = InternalOnly extends true ? T : F;
export declare type NeverIfInternal<T> = IfInternal<never, T>;
export { Options, ParameterType, ParameterHint, ParameterScope, BindOption, SourceFileMode } from './options';
export { insertPrioritySorted, removeIfPresent } from './array';
export { Component, AbstractComponent, ChildableComponent } from './component';
export { Event, EventDispatcher } from './events';
export { normalizePath, directoryExists, ensureDirectoriesExist, writeFile, readFile } from './fs';
export { Logger, LogLevel, ConsoleLogger, CallbackLogger } from './loggers';
export { PluginHost } from './plugins';
