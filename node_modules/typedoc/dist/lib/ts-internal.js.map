{"version":3,"file":"ts-internal.js","sourceRoot":"","sources":["../../src/lib/ts-internal.ts"],"names":[],"mappings":"","sourcesContent":["import * as ts from \"typescript\";\n\n/**\n * Expose the internal TypeScript APIs that are used by TypeDoc\n */\ndeclare module \"typescript\" {\n    interface Node {\n        // https://github.com/microsoft/TypeScript/blob/v4.1.5/src/compiler/types.ts#L847\n        symbol?: ts.Symbol;\n    }\n\n    interface Symbol {\n        // https://github.com/microsoft/TypeScript/blob/v4.1.5/src/compiler/types.ts#L4734-L4737\n        checkFlags?: CheckFlags;\n    }\n\n    interface TypeChecker {\n        // https://github.com/microsoft/TypeScript/blob/v4.1.5/src/compiler/types.ts#L4145\n        // https://github.com/microsoft/TypeScript/issues/42118\n        getTypePredicateOfSignature(\n            signature: ts.Signature\n        ): ts.TypePredicate | undefined;\n    }\n\n    // https://github.com/microsoft/TypeScript/blob/v4.1.5/src/compiler/types.ts#L4707-L4732\n    /* @internal */\n    export const enum CheckFlags {\n        Instantiated = 1 << 0, // Instantiated symbol\n        SyntheticProperty = 1 << 1, // Property in union or intersection type\n        SyntheticMethod = 1 << 2, // Method in union or intersection type\n        Readonly = 1 << 3, // Readonly transient symbol\n        ReadPartial = 1 << 4, // Synthetic property present in some but not all constituents\n        WritePartial = 1 << 5, // Synthetic property present in some but only satisfied by an index signature in others\n        HasNonUniformType = 1 << 6, // Synthetic property with non-uniform type in constituents\n        HasLiteralType = 1 << 7, // Synthetic property with at least one literal type in constituents\n        ContainsPublic = 1 << 8, // Synthetic property with public constituent(s)\n        ContainsProtected = 1 << 9, // Synthetic property with protected constituent(s)\n        ContainsPrivate = 1 << 10, // Synthetic property with private constituent(s)\n        ContainsStatic = 1 << 11, // Synthetic property with static constituent(s)\n        Late = 1 << 12, // Late-bound symbol for a computed property with a dynamic name\n        ReverseMapped = 1 << 13, // Property of reverse-inferred homomorphic mapped type\n        OptionalParameter = 1 << 14, // Optional parameter\n        RestParameter = 1 << 15, // Rest parameter\n        DeferredType = 1 << 16, // Calculation of the type of this symbol is deferred due to processing costs, should be fetched with `getTypeOfSymbolWithDeferredType`\n        HasNeverType = 1 << 17, // Synthetic property with at least one never type in constituents\n        Mapped = 1 << 18, // Property of mapped type\n        StripOptional = 1 << 19, // Strip optionality in mapped property\n        Synthetic = SyntheticProperty | SyntheticMethod,\n        Discriminant = HasNonUniformType | HasLiteralType,\n        Partial = ReadPartial | WritePartial,\n    }\n}\n"]}