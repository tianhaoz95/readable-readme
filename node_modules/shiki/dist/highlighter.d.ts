import { Lang, ILanguageRegistration } from 'shiki-languages';
import { IThemedToken } from './themedTokenizer';
import { Theme, IShikiTheme } from 'shiki-themes';
export interface HighlighterOptions {
    theme: Theme | IShikiTheme;
    langs?: ILanguageRegistration[];
}
export declare function getHighlighter(options: HighlighterOptions): Promise<Highlighter>;
interface ThemedTokenizerOptions {
    /**
     * Whether to include explanation of each token's matching scopes
     * and why it's given its color. Default to false.
     */
    includeExplanation: boolean;
}
/**
 * Adapted from https://github.com/microsoft/TypeScript/issues/29729
 * Since `string | 'foo'` doesn't offer auto completion
 */
declare type StringLiteralUnion<T extends U, U = string> = T | (U & {});
export interface Highlighter {
    codeToThemedTokens(code: string, lang: StringLiteralUnion<Lang>, options?: ThemedTokenizerOptions): IThemedToken[][];
    codeToHtml?(code: string, lang: StringLiteralUnion<Lang>): string;
}
export {};
