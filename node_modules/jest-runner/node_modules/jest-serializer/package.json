{
  "_args": [
    [
      "jest-serializer@26.1.0",
      "/workspace/readable-readme"
    ]
  ],
  "_development": true,
  "_from": "jest-serializer@26.1.0",
  "_id": "jest-serializer@26.1.0",
  "_inBundle": false,
  "_integrity": "sha512-eqZOQG/0+MHmr25b2Z86g7+Kzd5dG9dhCiUoyUNJPgiqi38DqbDEOlHcNijyfZoj74soGBohKBZuJFS18YTJ5w==",
  "_location": "/jest-runner/jest-serializer",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "jest-serializer@26.1.0",
    "name": "jest-serializer",
    "escapedName": "jest-serializer",
    "rawSpec": "26.1.0",
    "saveSpec": null,
    "fetchSpec": "26.1.0"
  },
  "_requiredBy": [
    "/jest-runner/jest-haste-map"
  ],
  "_resolved": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-26.1.0.tgz",
  "_spec": "26.1.0",
  "_where": "/workspace/readable-readme",
  "bugs": {
    "url": "https://github.com/facebook/jest/issues"
  },
  "dependencies": {
    "graceful-fs": "^4.2.4"
  },
  "description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `undefined`, `NaN`, etc, although the JSON one does it through a replacer/reviver.",
  "devDependencies": {
    "@types/graceful-fs": "^4.1.3",
    "@types/node": "*"
  },
  "engines": {
    "node": ">= 10.14.2"
  },
  "gitHead": "817d8b6aca845dd4fcfd7f8316293e69f3a116c5",
  "homepage": "https://github.com/facebook/jest#readme",
  "license": "MIT",
  "main": "build/index.js",
  "name": "jest-serializer",
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/facebook/jest.git",
    "directory": "packages/jest-serializer"
  },
  "types": "build/index.d.ts",
  "version": "26.1.0"
}
